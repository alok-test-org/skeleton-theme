{% doc %}
  Renders a responsive grid layout of items.

  @typedef {object} grid_item
  @property {string} url - The URL where the item links to
  @property {string} title - The title text to display for the item
  @property {string} [description] - Optional description text for the item
  @property {image} [featured_image] - Optional image to display for the item
  @property {money} [price] - Optional price to display for the item

  @param {object[]} items - array of items to be rendered in the grid

  @example
  {% content_for 'block', id: 'grid', type: '_grid', items: collections %}
  {% content_for 'block', id: 'grid', type: '_grid', items: collection.products %}
  {% content_for 'block', id: 'grid', type: '_grid', items: search.results %}
{% enddoc %}

<div
  class="grid {{ block.settings.grid_item_width }}"
  style="--grid-gap: {{ block.settings.grid_gap }}px"
>
  {% for item in items %}
    {% content_for 'block', id: 'grid-tem', type: '_grid-item', item: item %}
  {% endfor %}
</div>

{% stylesheet %}
  .grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(min(var(--grid-item-size), 100%), 1fr));
    gap: var(--grid-gap);
  }
  .grid--compact {
    --grid-item-size: 160px;
  }
  .grid--full {
    --grid-item-size: 280px;
  }
{% endstylesheet %}

{% schema %}
{
  "name": "t:general.grid",
  "settings": [
    {
      "type": "select",
      "id": "grid_item_width",
      "label": "t:labels.grid_item_width",
      "options": [
        { "value": "grid--compact", "label": "t:options.size.small" },
        { "value": "grid--full", "label": "t:options.size.large" }
      ],
      "default": "grid--full"
    },
    {
      "type": "range",
      "id": "grid_gap",
      "label": "t:labels.grid_gap",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "default": 10
    }
  ]
}
{% endschema %}